{"version":3,"sources":["assets/logo.svg","../node_modules/colors/lib sync","components/automaton-designer/helpers.tsx","utils/math.tsx","components/automaton-designer/edge/edge.tsx","components/automaton-designer/automaton-designer.tsx","components/automaton-designer/node/node.tsx","components/automaton-designer/help/help.tsx","components/automaton-designer/examples.tsx","components/automaton-designer/index.tsx","routes/automaton/index.tsx","routes/automaton/automaton.tsx","routes/practice/practice.tsx","routes/practice/index.tsx","components/test-words/test-words.tsx","components/test-words/index.tsx","components/automaton-viewer/automaton-viewer.tsx","routes/regular-language/regular-language.tsx","components/automaton-viewer/index.tsx","components/regular-expression/regular-expression.tsx","components/regular-expression/index.tsx","routes/regular-language/examples.tsx","routes/regular-language/index.tsx","components/app/app.tsx","components/app/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","isSVGGElement","element","SVGElement","tagName","getMousePosition","offset","arguments","length","undefined","x","y","CTM","currentTarget","getScreenCTM","clientX","a","clientY","f","d","getStateFromElement","classList","contains","dataset","state","parentElement","getTransitionFromElement","from","to","symbol","getStatePosition","automaton","position","statePositions","get","setAcceptingState","accepting","noam","fsm","isAcceptingState","addAcceptingState","acceptingStates","filter","updateTransitions","transition","newSymbol","transitionAngle","newArr","split","Boolean","oldArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","alphabet","includes","addSymbol","addTransition","transitionAngles","Map","set","concat","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","index","transitions","fromState","toStates","splice","s","fixed","number","toFixed","replace","angleOfLine","start","end","offsetAngle","anchorAngle","Math","atan2","PI","closestPointOnCircle","circle","point","dx","cx","dy","cy","scale","sqrt","r","getStateRadius","ObjectType","DraggingMode","Edge","_ref2","toState","mousePosition","selected","dragging","pathD","fromRadius","mpoint","arrow","label","lineto","react_default","createElement","edge_EdgeArrow","angle","textAngle","edge_EdgeLabel","text","epac","radius","circleX","cos","circleY","sin","circleRadius","startAngle","endAngle","startX","startY","endX","endY","getEndPointsAndCircle","_ref","useGreaterThan180","abs","arc","edgeClass","classNames","edge","linking","dataProps","data-from","data-to","data-symbol","Object","assign","className","join","EdgeArrow","_ref3","commands","push","EdgeLabel","_ref4","adjustX","adjustY","slide","pow","round","Node","current","translate","isAccepting","isInitial","initialState","nodeClass","node","accept","initialStateArrow","xOffset","points","transform","data-state","Help","open","actions","Fragment","popover","placement","title","defaultVisible","overlayClassName","content","Array","i","slicedToArray","action","hint","key","icon","type","Examples","testWord","states","canRunAutomaton","nextSymbol","db","nextSymbolIndex","currentStates","makeTransition","iteratingUntilEnd","isWordInLanguage","word","isStringInLanguage","_unused","AutomatonDesigner","onUpdate","_useState","useState","_useState2","selectedObject","setSelectedObject","_useState3","_useState4","draggingMode","setDraggingMode","_useState5","_useState6","draggingOffset","setDraggingOffset","_useState7","_useState8","mouseLocation","setMouseLocation","_useState9","_useState10","debuggingMode","setDebuggingMode","_useState11","_useState12","setTestWord","linkingEdge","NODE","LINKING","edge_Edge","resetDebuggingHandler","computeEpsilonClosure","resetAutomaton","useEffect","intervalId","window","setInterval","clearInterval","dropdown","trigger","disabled","overlay","menu_default","onClick","click","startsWith","Number","clone","SubMenu_default","map","v","Item","es_button","symbolClass","consumed","input","placeholder","suffix","style","display","onChange","target","tooltip","readString","substring","previousSymbol","lib_esm","keyName","onKeyUp","shortcut","handle","delete","t","removeState","EDGE","_key$split","_key$split2","removeTransition","onDoubleClick","prompt","nextState","reduce","acc","max","parseInt","substr","getNextState","addState","setInitialState","onMouseDown","currentPosition","shiftKey","DRAGGING","statePosition","onMouseUp","onMouseLeave","onMouseMove","node_Node","unpacked","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","item","symbols","values","groupByTransitions","edgeKey","sort","help_Help","Automaton","makeNew","setAutomaton","layout","components_automaton_designer","questions","quizTitle","quizSynopsis","question","questionType","answerSelectionType","answers","correctAnswer","messageForCorrectAnswer","messageForIncorrectAnswer","explanation","Practice","Quiz_default","quiz","shuffle","showInstantFeedback","renderResultsHTML","words","expected","results","isValidAutomaton","str","strState","TestWords","testAccept","testType","toLowerCase","dangerouslySetInnerHTML","__html","TextArea","rows","ExpressionMenuOp","AutomatonViewer","automatonParent","useRef","useMemo","Viz","Module","render","renderSVGElement","printDotFormat","then","svgElement","firstChild","removeChild","appendChild","catch","error","console","renderAutomaton","ref","Title","Content","ExpressionHelp","color","expression","acceptWords","rejectWords","RegularLanguage","setExpression","setAcceptWords","setRejectWords","_useMemo","convertStatesToNumbers","minimize","convertNfaToDfa","convertEnfaToNfa","re","string","toAutomaton","name","generateAutomaton","_useMemo2","menu","RANDOM","simplify","random","SIMPLIFY","size","prefix","message","event","components_test_words","components_automaton_viewer","Header","Layout","Sider","ReactGA","initialize","testMode","process","withTracker","WrappedComponent","options","trackPage","page","_objectSpread","pageview","props","location","pathname","SiderWithRouter","withRouter","width","theme","selectedKeys","react_router_dom","App","src","logo","alt","href","app_Content","react_router","exact","path","component","hostname","match","ReactDOM","components_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.219d40a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 151;","import noam from 'noam';\n\nimport { Point } from '../../utils/math';\n\nfunction isSVGGElement(element: Element): boolean {\n  // Can't use \"element instanceof SVGGElement\" because SVGGElement is not defined\n  // in JSDOM and Jest test fail.\n  return element instanceof SVGElement && element.tagName === 'g';\n}\n\n/**\n * Returns the point within the SVG that corresponds to the mouse event.\n * \n * @param e \n * @param offset \n */\nexport function getMousePosition(e: React.MouseEvent, offset: Point = { x: 0, y: 0 }): Point {\n  const svg = e.currentTarget as SVGSVGElement;\n  const CTM = svg.getScreenCTM() as DOMMatrix;\n\n  return {\n    x: (e.clientX - CTM.e + offset.x) / CTM.a,\n    y: (e.clientY - CTM.f + offset.y) / CTM.d,\n  };\n}\n\n/**\n * Return the state corresponding to the specified element.\n * @param element \n */\nexport function getStateFromElement(element: Element): string | null {\n  if (element instanceof SVGElement && isSVGGElement(element) && element.classList.contains('node')) {\n    return (element as SVGElement).dataset.state || null;\n  } if (element.parentElement instanceof SVGElement && isSVGGElement(element.parentElement)) {\n    return getStateFromElement(element.parentElement);\n  }\n\n  return null;\n}\n\nexport function getTransitionFromElement(element: Element): { from: string; to: string; symbol: string } | null {\n  if (element instanceof SVGElement && isSVGGElement(element) && element.classList.contains('edge')) {\n    return {\n      from: element.dataset.from || '',\n      to: element.dataset.to || '',\n      symbol: element.dataset.symbol || '',\n    };\n  } if (element.parentElement instanceof SVGElement && isSVGGElement(element.parentElement)) {\n    return getTransitionFromElement(element.parentElement);\n  }\n  return null;\n}\n\n/**\n * Return the coordinates relative to the center Point that represents the state.\n *\n * @param automaton\n * @param state\n */\nexport function getStatePosition(automaton: any, state: string): Point {\n  const position = automaton.statePositions.get(state);\n  return {\n    x: position.x + 22,\n    y: position.y + 22,\n  };\n}\n\n/**\n * Return the next available state.\n * \n * @param automaton \n */\nexport function getNextState(automaton: any): string {\n  const nextState: number = automaton.states.reduce(\n    (acc: number, state: string) => Math.max(acc, parseInt(state.substr(1))), -1,\n  );\n  return `s${nextState + 1}`;\n}\n\n/**\n * Set the automaton state as accepting or not accepting.\n *\n * @param automaton\n * @param state\n * @param accepting\n */\nexport function setAcceptingState(automaton: any, state: string, accepting: boolean): void {\n  if (accepting) {\n    if (!noam.fsm.isAcceptingState(automaton, state)) {\n      noam.fsm.addAcceptingState(automaton, state);\n    }\n  } else {\n    automaton.acceptingStates = automaton.acceptingStates.filter((e: string) => e !== state);\n  }\n}\n\n/**\n * Add a state to the automaton.\n *\n * @param automaton\n * @param state\n * @param position\n */\nexport function addState(automaton: any, state: string, position: Point): void {\n  noam.fsm.addState(automaton, state);\n  if (!automaton.statePositions) {\n    automaton.statePositions = new Map<string, Point>();\n  }\n\n  automaton.statePositions.set(state, position);\n\n  if (automaton.states.length === 1) {\n    noam.fsm.setInitialState(automaton, state);\n  }\n}\n\n/**\n * Remove a state from the automaton and respective transitions.\n *\n * @param automaton\n * @param state\n */\nexport function removeState(automaton: any, state: string): void {\n  if (automaton.initialState === state) {\n    automaton.initialState = '';\n  }\n  automaton.states = automaton.states.filter((s: string) => s !== state);\n  automaton.statePositions.delete(state);\n  automaton.acceptingStates = automaton.acceptingStates.filter((s: string) => s !== state);\n  automaton.transitions.map((t: NoamAutomatonTransition) => t.toStates.filter((s: string) => s !== state));\n  automaton.transitions = automaton.transitions.filter(\n    (t: NoamAutomatonTransition) => (t.fromState !== state)\n      && t.toStates.length > 0\n      && !(t.toStates.length === 1 && t.toStates.includes(state)),\n  );\n}\n\n/**\n * Remove a transition from the automaton.\n *\n * @param automaton\n * @param key\n */\nexport function removeTransition(automaton: any, key: string): void {\n  automaton.transitionAngles.delete(key);\n\n  const [fromState, toState] = key.split('-');\n  automaton.transitions = automaton.transitions.filter(\n    (t: NoamAutomatonTransition) => !(t.fromState === fromState && t.toStates.length === 1 && t.toStates.includes(toState)),\n  );\n}\n\n/**\n * Add and remove transitions based on the current transition and new symbols.\n *\n * @param automaton\n * @param transition\n * @param newSymbol\n * @param transitionAngle\n */\nexport function updateTransitions(\n  automaton: any,\n  transition: { from: string; to: string; symbol: string },\n  newSymbol: string,\n  transitionAngle?: number,\n): any {\n  const newArr = newSymbol.split(',').filter(Boolean);\n  const oldArr = transition.symbol.split(',').filter(Boolean);\n\n  // Add transitions\n  for (const symbol of newArr) {\n    if (!automaton.alphabet.includes(symbol)) {\n      noam.fsm.addSymbol(automaton, symbol);\n    }\n\n    noam.fsm.addTransition(automaton, transition.from, [transition.to], symbol);\n\n    if (transitionAngle) {\n      if (!automaton.transitionAngles) {\n        automaton.transitionAngles = new Map<string, number>();\n      }\n      automaton.transitionAngles.set(`${transition.from}-${transition.to}`, transitionAngle);\n    }\n  }\n\n  // Remove transitions\n  for (const symbol of oldArr) {\n    if (newArr.includes(symbol)) {\n      continue;\n    }\n\n    for (const index in (automaton.transitions as NoamAutomatonTransitions)) {\n      const value = automaton.transitions[index] as NoamAutomatonTransition;\n      if (value.fromState !== transition.from || !value.toStates.includes(transition.to) || value.symbol !== symbol) {\n        continue;\n      }\n\n      if (value.toStates.length === 1) {\n        automaton.transitions.splice(index, 1);\n      } else {\n        automaton.transitions[index] = value.toStates.filter((s: string) => s !== transition.to);\n      }\n    }\n  }\n\n  return automaton;\n}\n\ntype NoamAutomatonTransition = { fromState: string; toStates: Array<string>; symbol: string };\ntype NoamAutomatonTransitions = Array<NoamAutomatonTransition>;\n\nexport function groupByTransitions(transitions: NoamAutomatonTransitions):\n  Array<{ fromState: string; toState: string; symbols: Array<string> }> {\n  const unpacked = [];\n  for (const transition of transitions) {\n    for (const toState of transition.toStates) {\n      unpacked.push({\n        fromState: transition.fromState,\n        toState,\n        symbol: transition.symbol,\n      });\n    }\n  }\n\n  return Array.from(\n    unpacked.reduce((acc, t) => {\n      const key = `${t.fromState}-${t.toState}`;\n\n      const item: { fromState: string; toState: string; symbols: Array<string> } = acc.get(key) || {\n        fromState: t.fromState,\n        toState: t.toState,\n        symbols: [],\n      };\n\n      item.symbols.push(t.symbol);\n\n      return acc.set(key, item);\n    }, new Map<string, { fromState: string; toState: string; symbols: Array<string> }>()).values(),\n  );\n}\n","export type Point = {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport type Circle = {\n    readonly cx: number;\n    readonly cy: number;\n    readonly r: number;\n}\n\n/**\n * Return a number with 2 digits precision on the fraction part.\n *\n * @param number\n */\nexport function fixed(number: number): string {\n  return number.toFixed(2).replace(/0+$/, '').replace(/\\.$/, '');\n}\n\n/**\n * Return the midpoint between two points.\n *\n * @param start\n * @param end\n */\nexport function midpoint(start: Point, end: Point): Point {\n  return {\n    x: (start.x + end.x) / 2,\n    y: (start.y + end.y) / 2,\n  };\n}\n\n/**\n * Return the angle (in radians) of the line defined by two points and the horizontal axis.\n *\n * @param start\n * @param end\n * @param offsetAngle\n */\nexport function angleOfLine(start: Point, end: Point, offsetAngle = 0): number {\n  let anchorAngle = Math.atan2(end.y - start.y, end.x - start.x) + offsetAngle;\n  if (anchorAngle < -Math.PI) {\n    anchorAngle += 2 * Math.PI;\n  }\n\n  if (anchorAngle > Math.PI) {\n    anchorAngle -= 2 * Math.PI;\n  }\n  return anchorAngle;\n}\n\n\n/**\n * Return the point within a circle that is closest to the specific point.\n *\n * @param circle\n * @param point\n */\nexport function closestPointOnCircle(circle: Circle, point: Point): Point {\n  const dx = point.x - circle.cx;\n  const dy = point.y - circle.cy;\n  const scale = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: circle.cx + dx * circle.r / scale,\n    y: circle.cy + dy * circle.r / scale,\n  };\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport noam from 'noam';\n\nimport {\n  getStatePosition,\n} from '../helpers';\nimport {\n  Point,\n  fixed,\n  midpoint,\n  closestPointOnCircle,\n  angleOfLine,\n} from '../../../utils/math';\n\nimport './edge.css';\n\nfunction getStateRadius(automaton: any, state: string): number {\n  return noam.fsm.isAcceptingState(automaton, state) ? 22 : 18;\n}\n\n/**\n * Returns the commands required to draw a line with SVG path element.\n *\n * @param from\n * @param to\n */\nfunction lineto(from: Point, to: Point): Array<string> {\n  // The \"lineto\" commands\n  // https://www.w3.org/TR/SVG/paths.html#PathDataLinetoCommands\n  return [\n    `M${fixed(from.x)},${fixed(from.y)}`, // starting point\n    `L${fixed(to.x)},${fixed(to.y)}`, // end point\n  ];\n}\n\n/**\n * Returns the commands required to draw an arc with SVG path element.\n *\n * @param x\n * @param y\n * @param radius\n * @param startAngle\n * @param endAngle\n * @param isReversed\n */\nfunction arc(\n  x: number,\n  y: number,\n  radius: number,\n  startAngle: number,\n  endAngle: number,\n  isReversed = false,\n): Array<string> {\n  if (isReversed) {\n    [startAngle, endAngle] = [endAngle, startAngle];\n  }\n\n  if (endAngle < startAngle) {\n    endAngle += Math.PI * 2;\n  }\n\n  const startX = x + radius * Math.cos(startAngle);\n  const startY = y + radius * Math.sin(startAngle);\n  const endX = x + radius * Math.cos(endAngle);\n  const endY = y + radius * Math.sin(endAngle);\n  const useGreaterThan180 = (Math.abs(endAngle - startAngle) > Math.PI) ? '1' : '0';\n\n  // The elliptical arc curve commands\n  // https://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\n  return [\n    `M${fixed(startX)},${fixed(startY)}`, // starting point\n    `A${fixed(radius)},${fixed(radius)}`, // radii\n    '0', // perfect circle\n    useGreaterThan180 ? '1' : '0', // large-arc-flag\n    '1', // sweep-flag, arc drawn in a positive angle\n    `${fixed(endX)},${fixed(endY)}`, // end point\n  ];\n}\n\nfunction getEndPointsAndCircle(circle: Point, radius: number, anchorAngle: number) {\n  const circleX = circle.x + 1.5 * radius * Math.cos(anchorAngle);\n  const circleY = circle.y + 1.5 * radius * Math.sin(anchorAngle);\n  const circleRadius = 0.75 * radius;\n  const startAngle = anchorAngle - Math.PI * 0.8;\n  const endAngle = anchorAngle + Math.PI * 0.8;\n\n  return {\n    startX: circleX + circleRadius * Math.cos(startAngle),\n    startY: circleY + circleRadius * Math.sin(startAngle),\n    endX: circleX + circleRadius * Math.cos(endAngle),\n    endY: circleY + circleRadius * Math.sin(endAngle),\n    startAngle,\n    endAngle,\n    circleX,\n    circleY,\n    circleRadius,\n  };\n}\n\nexport const Edge: React.FC<{\n    automaton: any;\n    fromState: string;\n    toState?: string | null;\n    symbol?: string;\n    mousePosition?: Point;\n    selected: boolean;\n    dragging: boolean;\n}> = ({\n  automaton, fromState, toState, symbol, mousePosition, selected, dragging,\n}) => {\n  let pathD: Array<string> = [];\n\n  let from = getStatePosition(automaton, fromState);\n  const fromRadius = getStateRadius(automaton, fromState);\n  let to = toState ? getStatePosition(automaton, toState) : mousePosition!;\n  const mpoint = mousePosition || midpoint(from, to);\n\n  let arrow = null;\n  let label = null;\n\n  if (fromState !== toState) {\n    from = closestPointOnCircle({ cx: from.x, cy: from.y, r: fromRadius }, mpoint);\n    to = toState ? closestPointOnCircle({ cx: to.x, cy: to.y, r: getStateRadius(automaton, toState) }, from) : mpoint;\n\n    // TODO: arc edges between two nodes\n\n    // const anchorAngle: number = toState && automaton.transitionAngles ? automaton.transitionAngles.get(`${fromState}-${toState}`) : 0;\n    // if (anchorAngle) {\n    //     const epac = getEndPointsAndCircle(from, fromRadius, anchorAngle);\n    //     pathD = arc(epac.circleX, epac.circleY, epac.circleRadius, epac.startAngle, epac.endAngle);\n    // } else {\n    pathD = lineto(from, to);\n    // }\n\n    arrow = <EdgeArrow point={to} angle={Math.atan2(to.y - from.y, to.x - from.x)} />;\n\n    const textAngle = Math.atan2(to.x - from.x, from.y - to.y);\n    label = <EdgeLabel point={mpoint} text={symbol || ''} angle={textAngle} />;\n  } else {\n    const anchorAngle = mousePosition ? angleOfLine(from, mousePosition) : automaton.transitionAngles.get(`${fromState}-${toState}`);\n    const epac = getEndPointsAndCircle(from, fromRadius, anchorAngle);\n\n    pathD = arc(epac.circleX, epac.circleY, epac.circleRadius, epac.startAngle, epac.endAngle, false);\n\n    arrow = <EdgeArrow point={{ x: epac.endX, y: epac.endY }} angle={epac.endAngle + Math.PI * 0.4} />;\n\n    label = (\n      <EdgeLabel\n        point={{\n          x: epac.circleX + epac.circleRadius * Math.cos(anchorAngle),\n          y: epac.circleY + epac.circleRadius * Math.sin(anchorAngle),\n        }}\n        text={symbol || ''}\n        angle={anchorAngle}\n      />\n    );\n  }\n\n  const edgeClass = classNames({\n    edge: true,\n    dragging,\n    selected,\n    linking: mousePosition,\n  });\n\n  let dataProps = {};\n  if (!mousePosition) {\n    dataProps = {\n      'data-from': fromState,\n      'data-to': toState,\n      'data-symbol': symbol,\n    };\n  }\n\n  return (\n    <g className={edgeClass} {...dataProps}>\n      <path className=\"line\" d={pathD.join(' ')} />\n      {arrow}\n      {label}\n    </g>\n  );\n};\n\nconst EdgeArrow: React.FC<{\n    point: Point;\n    angle: number;\n}> = ({ point, angle }) => {\n  const dx = Math.cos(angle);\n  const dy = Math.sin(angle);\n\n  const commands: Array<string> = [];\n  commands.push(`M${fixed(point.x)},${fixed(point.y)}`);\n  commands.push(`L${fixed(point.x - 8 * dx + 5 * dy)},${fixed(point.y - 8 * dy - 5 * dx)}`);\n  commands.push(`${fixed(point.x - 8 * dx - 5 * dy)},${fixed(point.y - 8 * dy + 5 * dx)}`);\n\n  return (\n    <path className=\"arrow\" d={commands.join(' ')} />\n  );\n};\n\nconst EdgeLabel: React.FC<{\n    point: Point;\n    text: string;\n    angle?: number;\n}> = ({ point, text, angle }) => {\n  let { x } = point;\n  let { y } = point;\n\n  if (angle !== null && angle !== undefined) {\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n    const adjustX = 5 * (cos > 0 ? 1 : -1);\n    const adjustY = (10 + 5) * (sin > 0 ? 1 : -1);\n    const slide = sin * Math.pow(Math.abs(sin), 40) * adjustX - cos * Math.pow(Math.abs(cos), 10) * adjustY;\n    x += adjustX - sin * slide;\n    y += adjustY + cos * slide;\n  }\n\n  x = Math.round(x);\n  y = Math.round(y);\n\n  return (\n    <text x={fixed(x)} y={fixed(y + 6)}>{text}</text>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Hotkeys from 'react-hot-keys';\nimport { HotkeysEvent } from 'hotkeys-js';\nimport {\n  Input, Button, Tooltip, Icon, Dropdown,\n} from 'antd';\nimport Menu, { ClickParam } from 'antd/lib/menu';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport noam from 'noam';\nimport clone from 'clone';\n\nimport { Edge } from './edge/edge';\nimport { Node } from './node/node';\nimport { Help } from './help/help';\nimport {\n  getStateFromElement,\n  getMousePosition,\n  getStatePosition,\n  getTransitionFromElement,\n  groupByTransitions,\n  updateTransitions,\n  addState,\n  removeState,\n  setAcceptingState,\n  getNextState,\n  removeTransition,\n} from './helpers';\nimport { Examples } from './examples';\nimport { Point, angleOfLine } from '../../utils/math';\n\nimport './automaton-designer.css';\n\ntype DebuggingMode = {\n    currentStates: Array<string>;\n    testWord: string;\n    nextSymbolIndex: number;\n    iteratingUntilEnd: boolean;\n};\n\nenum ObjectType { NODE, EDGE }\nenum DraggingMode { DRAGGING, LINKING }\n\nfunction canRunAutomaton(automaton: any): boolean {\n  return automaton.states.length > 0 && automaton.initialState;\n}\n\nfunction resetAutomaton(automaton: any, word: string): DebuggingMode {\n  return {\n    currentStates: noam.fsm.computeEpsilonClosure(automaton, [automaton.initialState]),\n    testWord: word,\n    nextSymbolIndex: 0,\n    iteratingUntilEnd: false,\n  };\n}\n\nfunction previousSymbol(automaton: any, db: DebuggingMode): DebuggingMode {\n  if (db.nextSymbolIndex <= 0) {\n    return db;\n  }\n\n  return {\n    currentStates: noam.fsm.readString(automaton, db.testWord.substring(0, db.nextSymbolIndex - 1).split('')),\n    testWord: db.testWord,\n    nextSymbolIndex: db.nextSymbolIndex - 1,\n    iteratingUntilEnd: false,\n  };\n}\n\nfunction nextSymbol(automaton: any, db: DebuggingMode): DebuggingMode {\n  if (db.nextSymbolIndex >= db.testWord.length) {\n    return db;\n  }\n\n  return {\n    currentStates: noam.fsm.makeTransition(automaton, db.currentStates, db.testWord[db.nextSymbolIndex]),\n    testWord: db.testWord,\n    nextSymbolIndex: db.nextSymbolIndex + 1,\n    iteratingUntilEnd: db.iteratingUntilEnd,\n  };\n}\n\nfunction isWordInLanguage(automaton: any, word: string): boolean {\n  try {\n    return noam.fsm.isStringInLanguage(automaton, word);\n  } catch {\n    return false;\n  }\n}\n\nexport const AutomatonDesigner: React.FC<{\n    automaton: any;\n    onUpdate?: (automaton: any) => void;\n}> = ({ automaton, onUpdate }) => {\n  const [selectedObject, setSelectedObject] = useState<{ type: ObjectType; key: string } | null>();\n  const [draggingMode, setDraggingMode] = useState<DraggingMode | null>();\n  const [draggingOffset, setDraggingOffset] = useState<Point>();\n  const [mouseLocation, setMouseLocation] = useState<{ position: Point; state: string | null }>({ position: { x: 0, y: 0 }, state: null });\n  const [debuggingMode, setDebuggingMode] = useState<DebuggingMode | null>();\n  const [testWord, setTestWord] = useState('');\n\n  const doubleClickHandler = (e: React.MouseEvent) => {\n    const element = e.target as Element;\n    automaton = clone(automaton, false);\n\n    const state = getStateFromElement(element);\n    if (state) {\n      setAcceptingState(automaton, state, !noam.fsm.isAcceptingState(automaton, state));\n      setSelectedObject({ type: ObjectType.NODE, key: state });\n    } else {\n      const transition = getTransitionFromElement(element);\n      if (transition) {\n        const symbol = prompt('Modify the transition symbol', transition.symbol);\n        if (symbol !== null) {\n          automaton = updateTransitions(automaton, transition, symbol || '');\n        }\n        setSelectedObject({ type: ObjectType.EDGE, key: `${transition.from}-${transition.to}` });\n      } else {\n        const nextState = getNextState(automaton);\n        addState(automaton, nextState, getMousePosition(e, { x: -22, y: -22 }));\n        setSelectedObject({ type: ObjectType.NODE, key: nextState });\n      }\n    }\n\n    if (onUpdate) {\n      onUpdate(automaton);\n    }\n  };\n\n  const mouseDownHandler = (e: React.MouseEvent) => {\n    const element = e.target as Element;\n    const currentPosition = getMousePosition(e);\n\n    const state = getStateFromElement(element);\n    if (state) {\n      setSelectedObject({ type: ObjectType.NODE, key: state });\n\n      const draggingMode = e.shiftKey ? DraggingMode.LINKING : DraggingMode.DRAGGING;\n      setDraggingMode(draggingMode);\n\n      switch (draggingMode) {\n        case DraggingMode.DRAGGING:\n          const statePosition = automaton.statePositions.get(state);\n          setDraggingOffset({\n            x: statePosition.x - currentPosition.x,\n            y: statePosition.y - currentPosition.y,\n          });\n          break;\n        case DraggingMode.LINKING:\n          setMouseLocation({ position: currentPosition, state });\n          break;\n      }\n    } else {\n      const transition = getTransitionFromElement(element);\n      if (transition) {\n        setSelectedObject({ type: ObjectType.EDGE, key: `${transition.from}-${transition.to}` });\n      } else {\n        setSelectedObject(null);\n      }\n    }\n  };\n\n  const mouseMoveHandler = (e: React.MouseEvent) => {\n    const element = e.target as Element;\n\n    switch (draggingMode) {\n      case DraggingMode.DRAGGING:\n        automaton = clone(automaton, false);\n        if (selectedObject && selectedObject.type === ObjectType.NODE) {\n          automaton.statePositions.set(selectedObject.key, getMousePosition(e, draggingOffset));\n        }\n        if (onUpdate) {\n          onUpdate(automaton);\n        }\n        break;\n\n      case DraggingMode.LINKING:\n        setMouseLocation({\n          position: getMousePosition(e),\n          state: getStateFromElement(element),\n        });\n        break;\n    }\n  };\n\n  const mouseUpHandler = (e: React.MouseEvent) => {\n    const element = e.target as Element;\n\n    if (draggingMode === DraggingMode.LINKING) {\n      const toState = getStateFromElement(element);\n\n      if (toState && selectedObject && selectedObject.type === ObjectType.NODE) {\n        const symbol = prompt('What is the transition symbol?');\n        automaton = clone(automaton, false);\n        automaton = updateTransitions(\n          automaton,\n          {\n            from: selectedObject.key,\n            to: toState,\n            symbol: '',\n          },\n          symbol || '',\n          selectedObject.key === toState\n            ? angleOfLine(getStatePosition(automaton, selectedObject.key), getMousePosition(e))\n            : 0,\n        );\n\n        if (onUpdate) {\n          onUpdate(automaton);\n        }\n      }\n    }\n\n    setDraggingMode(null);\n  };\n\n  const mouseLeaveHandler = (e: React.MouseEvent) => {\n    setDraggingMode(null);\n  };\n\n  let linkingEdge = null;\n  if (selectedObject && selectedObject.type === ObjectType.NODE && draggingMode === DraggingMode.LINKING) {\n    linkingEdge = (\n      <Edge\n        automaton={automaton}\n        fromState={selectedObject.key}\n        toState={mouseLocation.state}\n        mousePosition={mouseLocation.position}\n        dragging={false}\n        selected={false}\n      />\n    );\n  }\n\n  const keyUpHandler = (shortcut: string, e: KeyboardEvent, handle: HotkeysEvent) => {\n    if (!selectedObject) {\n      return;\n    }\n\n    automaton = clone(automaton, false);\n    switch (shortcut) {\n      case 'delete': // Remove current element\n        setSelectedObject(null);\n        switch (selectedObject.type) {\n          case ObjectType.NODE:\n            removeState(automaton, selectedObject.key);\n            break;\n          case ObjectType.EDGE:\n            removeTransition(automaton, selectedObject.key);\n            break;\n        }\n        break;\n\n      case 'shift+a': // Set state accepting\n        if (selectedObject.type === ObjectType.NODE) {\n          setAcceptingState(automaton, selectedObject.key, !noam.fsm.isAcceptingState(automaton, selectedObject.key));\n        }\n        break;\n\n      case 'shift+i': // Set state as initial\n        if (selectedObject.type === ObjectType.NODE) {\n          automaton.initialState = selectedObject.key;\n        }\n    }\n\n    if (onUpdate) {\n      onUpdate(automaton);\n    }\n  };\n\n  const startDebuggingHandler = (e: React.MouseEvent) => {\n    resetDebuggingHandler(e);\n  };\n\n  const stopDebuggingHandler = (e: React.MouseEvent) => {\n    setDebuggingMode(null);\n  };\n\n  const resetDebuggingHandler = (e: React.MouseEvent) => {\n    setDebuggingMode(resetAutomaton(automaton, testWord));\n  };\n\n  const stepBackwardHandler = (e: React.MouseEvent) => {\n    setDebuggingMode(previousSymbol(automaton, debuggingMode!));\n  };\n\n  const stepForwardHandler = (e: React.MouseEvent) => {\n    setDebuggingMode(nextSymbol(automaton, debuggingMode!));\n  };\n\n  const fastForwardHandler = (e: React.MouseEvent) => {\n    setDebuggingMode({\n      currentStates: debuggingMode!.currentStates,\n      testWord: debuggingMode!.testWord,\n      nextSymbolIndex: debuggingMode!.nextSymbolIndex,\n      iteratingUntilEnd: true,\n    });\n  };\n\n  useEffect(() => {\n    let intervalId: number | undefined;\n\n    if (debuggingMode && debuggingMode.iteratingUntilEnd) {\n      intervalId = window.setInterval(() => setDebuggingMode(nextSymbol(automaton, debuggingMode)), 750);\n    } else if (intervalId) {\n      clearInterval(intervalId);\n    }\n\n    return () => clearInterval(intervalId);\n  }, [debuggingMode, automaton]);\n\n  const handleOptionsMenuClick = (click: ClickParam) => {\n    if (click.key.startsWith('example')) {\n      const index = Number(click.key.split('-')[1]);\n      setTestWord(Examples[index].testWord);\n      if (onUpdate) {\n        onUpdate(clone(Examples[index].automaton, false));\n      }\n    }\n  };\n\n  /** TODO:\n     * check if automaton is equivalent to regular expression\n     */\n  return (\n    <div className=\"automaton-designer\">\n      <div className=\"toolbar\">\n        <Dropdown\n          placement=\"bottomLeft\"\n          trigger={['click']}\n          disabled={Boolean(debuggingMode)}\n          overlay={(\n            <Menu onClick={handleOptionsMenuClick}>\n              <SubMenu title=\"Examples\">\n                {\n                                    Examples.map((v, i) => <Menu.Item key={`example-${i}`}>{v.title}</Menu.Item>)\n                                }\n              </SubMenu>\n            </Menu>\n)}\n        >\n          <Button icon=\"menu\" />\n        </Dropdown>\n\n        {debuggingMode\n          ? (\n            <span className=\"ant-input-affix-wrapper debugging-symbols\">\n              {\n                        debuggingMode.testWord.split('').map((symbol, index) => {\n                          const symbolClass = classNames({\n                            consumed: index < debuggingMode.nextSymbolIndex,\n                            current: index === debuggingMode.nextSymbolIndex,\n                          });\n\n                          return <span key={index} className={symbolClass}>{symbol}</span>;\n                        })\n                    }\n            </span>\n          )\n          : (\n            <Input\n              placeholder=\"Write your test word\"\n              disabled={debuggingMode != null}\n              value={testWord}\n              suffix={(\n                <Icon\n                  type={testWord && isWordInLanguage(automaton, testWord) ? 'check' : 'close'}\n                  style={{ display: (!testWord ? 'none' : 'inherit') }}\n                />\n)}\n              onChange={(e) => setTestWord(e.target.value)}\n            />\n          )}\n\n        <Tooltip title=\"Start debugging\">\n          {debuggingMode\n            ? <Button icon=\"stop\" onClick={stopDebuggingHandler} />\n            : <Button icon=\"bug\" disabled={!canRunAutomaton(automaton)} onClick={startDebuggingHandler} />}\n        </Tooltip>\n\n        <Tooltip title=\"Reset the automaton and go back to the beginning of the input sequence\">\n          <Button icon=\"fast-backward\" disabled={!debuggingMode} onClick={resetDebuggingHandler} />\n        </Tooltip>\n\n        <Tooltip title=\"Go back one symbol\">\n          <Button icon=\"step-backward\" disabled={!debuggingMode} onClick={stepBackwardHandler} />\n        </Tooltip>\n\n        <Tooltip title=\"Consume the next input symbol in the sequence\">\n          <Button icon=\"step-forward\" disabled={!debuggingMode} onClick={stepForwardHandler} />\n        </Tooltip>\n\n        <Tooltip title=\"Consume all remaining input symbols\">\n          <Button icon=\"fast-forward\" disabled={!debuggingMode} onClick={fastForwardHandler} />\n        </Tooltip>\n      </div>\n\n      <div className=\"container\">\n        <Hotkeys\n          keyName=\"delete,shift+a,shift+i\"\n          onKeyUp={keyUpHandler}\n        >\n          <svg\n            onDoubleClick={doubleClickHandler}\n            onMouseDown={mouseDownHandler}\n            onMouseUp={mouseUpHandler}\n            onMouseLeave={mouseLeaveHandler}\n            onMouseMove={mouseMoveHandler}\n          >\n            {(automaton.states as Array<string>).map(\n              (s) => (\n                <Node\n                  key={s}\n                  automaton={automaton}\n                  state={s}\n                  selected={Boolean(selectedObject && selectedObject.type === ObjectType.NODE && selectedObject.key === s)}\n                  dragging={Boolean(selectedObject && selectedObject.type === ObjectType.NODE && selectedObject.key === s && draggingMode === DraggingMode.DRAGGING)}\n                  current={Boolean(debuggingMode && debuggingMode.currentStates.includes(s))}\n                />\n              ),\n            )}\n            {groupByTransitions(automaton.transitions).map(\n              (t) => {\n                const edgeKey = `${t.fromState}-${t.toState}`;\n                return (\n                  <Edge\n                    key={edgeKey}\nautomaton={automaton}\n                    fromState={t.fromState}\ntoState={t.toState}\nsymbol={t.symbols.sort().join(',')}\n                    dragging={Boolean(selectedObject && selectedObject.type === ObjectType.EDGE && selectedObject.key === edgeKey && draggingMode === DraggingMode.DRAGGING)}\n                    selected={Boolean(selectedObject && selectedObject.type === ObjectType.EDGE && selectedObject.key === edgeKey)}\n                  />\n                );\n              },\n            )}\n            {linkingEdge}\n          </svg>\n        </Hotkeys>\n        <Help open={!automaton || !automaton.states || automaton.states.length === 0} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport noam from 'noam';\n\nimport { Point, fixed } from '../../../utils/math';\n\nimport './node.css';\n\nexport const Node: React.FC<{\n    automaton: any;\n    state: string;\n    selected: boolean;\n    dragging: boolean;\n    current: boolean;\n}> = ({\n  automaton, state, selected, dragging, current,\n}) => {\n  const position: Point = automaton.statePositions.get(state);\n  const translate = `translate(${fixed(position.x)},${fixed(position.y)})`;\n\n  const isAccepting: boolean = noam.fsm.isAcceptingState(automaton, state);\n  const isInitial: boolean = (automaton.initialState === state);\n\n  const nodeClass = classNames({\n    node: true,\n    dragging,\n    selected,\n    accept: noam.fsm.isAcceptingState(automaton, state),\n    current,\n  });\n\n  let initialStateArrow = null;\n  if (isInitial) {\n    const xOffset = isAccepting ? -4 : 0;\n    initialStateArrow = <polyline points={`${-8 + xOffset},14 ${2 + xOffset},22 ${-8 + xOffset},30`} />;\n  }\n\n  return (\n    <g className={nodeClass} transform={translate} data-state={state}>\n      {initialStateArrow}\n      {isAccepting ? <circle cx=\"22\" cy=\"22\" r=\"22\" /> : null}\n      <circle cx=\"22\" cy=\"22\" r=\"18\" />\n      <text x=\"22\" y=\"27\">{state}</text>\n    </g>\n  );\n};\n","import React from 'react';\nimport { Icon, Popover } from 'antd';\n\nimport './help.css';\n\nexport const Help: React.FC<{\n    open: boolean;\n}> = ({ open }) => {\n  const actions: Map<string, JSX.Element> = new Map([\n    ['Add a state', <>\n      <kbd>🖰 double click</kbd>\n      {' '}\non empty canvas\n    </>],\n    ['Toggle accept state', <>\n      <kbd>🖰 double click</kbd>\n      {' '}\nor\n      {' '}\n      <kbd>\n        <kbd>shift</kbd>\n        {' '}\n+\n        {' '}\n        <kbd>a</kbd>\n      </kbd>\n                            </>],\n    ['Mark state as initial', <>\n      <kbd>\n        <kbd>shift</kbd>\n        {' '}\n+\n        {' '}\n        <kbd>i</kbd>\n      </kbd>\n    </>],\n    ['Move a state', <>\n      <kbd>🖰 click</kbd>\n      {' '}\nand drag\n    </>],\n    ['Add a transition', <>\n      <kbd>\n        <kbd>shift</kbd>\n        {' '}\n+\n        {' '}\n        <kbd>🖰 click</kbd>\n      </kbd>\n      {' '}\nand drag\n    </>],\n    ['Delete a state or transition', <><kbd>delete</kbd></>],\n    ['Update a transition symbol', <><kbd>🖰 double click</kbd></>],\n  ]);\n\n  return (\n    <Popover\n      placement=\"rightTop\"\n      title=\"How to use the automaton designer?\"\n      defaultVisible={open}\n      overlayClassName=\"automaton-designer-help\"\n      content={(\n        <ul>\n          {\n                    Array.from(actions, ([action, hint], i) => (\n                      <li key={i}>\n                        <span className=\"action\">{action}</span>\n                        <span className=\"hint\">{hint}</span>\n                      </li>\n                    ))\n                }\n        </ul>\n)}\n    >\n      <Icon type=\"question-circle\" />\n    </Popover>\n  );\n};\n","type NoamAutomaton = {\n    states: Array<string>;\n    alphabet: Array<string>;\n    acceptingStates: Array<string>;\n    initialState: string;\n    transitions: Array<{\n        fromState: string;\n        toStates: Array<string>;\n        symbol: string;\n    }>;\n    statePositions: Map<string, {\n        x: number; y: number;\n    }>;\n    transitionAngles: Map<string, number>;\n}\n\ntype AutomatonExample = {\n    title: string;\n    testWord: string;\n    automaton: NoamAutomaton;\n}\n\nexport const Examples: Array<AutomatonExample> = [\n  {\n    title: 'one or more \"ab\"',\n    testWord: 'ababab',\n    automaton:\n        {\n          states: [\n            's0',\n            's1',\n            's2',\n          ],\n          alphabet: [\n            'a',\n            'b',\n          ],\n          acceptingStates: [\n            's2',\n          ],\n          initialState: 's0',\n          transitions: [\n            {\n              fromState: 's0',\n              toStates: [\n                's1',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's1',\n              toStates: [\n                's2',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's2',\n              toStates: [\n                's1',\n              ],\n              symbol: 'a',\n            },\n          ],\n          statePositions: new Map([\n            ['s0', { x: 60, y: 60 }],\n            ['s1', { x: 180, y: 60 }],\n            ['s2', { x: 340, y: 60 }],\n          ]),\n          transitionAngles: new Map([\n          ]),\n        },\n  },\n  {\n    title: 'strictly alternating a\\'s and b\\'s',\n    testWord: 'abababababababab',\n    automaton:\n        {\n          states: [\n            's0',\n            's1',\n            's2',\n          ],\n          alphabet: [\n            'a',\n            'b',\n          ],\n          acceptingStates: [\n            's0',\n            's1',\n            's2',\n          ],\n          initialState: 's0',\n          transitions: [\n            {\n              fromState: 's0',\n              toStates: [\n                's1',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's0',\n              toStates: [\n                's2',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's1',\n              toStates: [\n                's2',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's2',\n              toStates: [\n                's1',\n              ],\n              symbol: 'a',\n            },\n          ],\n          statePositions: new Map([\n            ['s0', { x: 60, y: 60 }],\n            ['s1', { x: 200, y: 180 }],\n            ['s2', { x: 340, y: 60 }],\n          ]),\n          transitionAngles: new Map([\n          ]),\n        },\n  },\n  {\n    title: 'begin with \"aba\" and end with \"bb\"',\n    testWord: 'ababbababb',\n    automaton:\n        {\n          states: [\n            's0',\n            's1',\n            's2',\n            's3',\n            's4',\n            's5',\n          ],\n          alphabet: [\n            'a',\n            'b',\n          ],\n          acceptingStates: [\n            's5',\n          ],\n          initialState: 's0',\n          transitions: [\n            {\n              fromState: 's3',\n              toStates: [\n                's3',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's3',\n              toStates: [\n                's4',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's5',\n              toStates: [\n                's5',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's4',\n              toStates: [\n                's3',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's0',\n              toStates: [\n                's1',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's1',\n              toStates: [\n                's2',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's4',\n              toStates: [\n                's5',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's5',\n              toStates: [\n                's3',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's2',\n              toStates: [\n                's3',\n              ],\n              symbol: 'a',\n            },\n          ],\n          statePositions: new Map([\n            ['s0', { x: 86, y: 145 }],\n            ['s1', { x: 165, y: 80 }],\n            ['s2', { x: 235, y: 145 }],\n            ['s3', { x: 311, y: 80 }],\n            ['s4', { x: 396, y: 145 }],\n            ['s5', { x: 311, y: 231 }],\n          ]),\n          transitionAngles: new Map([\n            ['s3-s3', -1.6],\n            ['s5-s5', 1.6],\n          ]),\n        },\n  },\n  {\n    title: 'even number of a\\'s and odd number of b\\'s',\n    testWord: 'aababab',\n    automaton:\n        {\n          states: [\n            's0',\n            's1',\n            's2',\n            's3',\n          ],\n          alphabet: [\n            'a',\n            'b',\n          ],\n          acceptingStates: [\n            's2',\n          ],\n          initialState: 's0',\n          transitions: [\n            {\n              fromState: 's1',\n              toStates: [\n                's3',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's3',\n              toStates: [\n                's1',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's0',\n              toStates: [\n                's2',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's2',\n              toStates: [\n                's0',\n              ],\n              symbol: 'b',\n            },\n            {\n              fromState: 's2',\n              toStates: [\n                's3',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's3',\n              toStates: [\n                's2',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's0',\n              toStates: [\n                's1',\n              ],\n              symbol: 'a',\n            },\n            {\n              fromState: 's1',\n              toStates: [\n                's0',\n              ],\n              symbol: 'a',\n            },\n          ],\n          statePositions: new Map([\n            ['s0', { x: 140, y: 80 }],\n            ['s1', { x: 300, y: 80 }],\n            ['s2', { x: 200, y: 220 }],\n            ['s3', { x: 360, y: 220 }],\n          ]),\n          transitionAngles: new Map([\n          ]),\n        },\n  },\n];\n","import { AutomatonDesigner } from './automaton-designer';\n\nexport default AutomatonDesigner;\n","import { Automaton } from './automaton';\n\nexport default Automaton;\n","import React, { useState } from 'react';\nimport { Layout } from 'antd';\nimport noam from 'noam';\n\nimport AutomatonDesigner from '../../components/automaton-designer';\n\nimport './automaton.css';\n\nexport const Automaton: React.FC = () => {\n  const [automaton, setAutomaton] = useState(noam.fsm.makeNew);\n\n  return (\n    <Layout>\n      <AutomatonDesigner automaton={automaton} onUpdate={(automaton) => setAutomaton(automaton)} />\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { Layout } from 'antd';\nimport Quiz from 'react-quiz-component';\n\nimport './practice.css';\n\n/**\n * Questions have been obtained from https://www.geeksforgeeks.org/regular-languages-and-finite-automata-gq/\n */\nconst questions = {\n  quizTitle: \"Let's practice regular language and automata\",\n  quizSynopsis: 'A small set of practice questions about regular language and automata...',\n  questions: [\n    {\n      question: 'Given the language `L={ab,aa,baa}` which of the following strings are in `L*`?',\n      questionType: 'text',\n      answerSelectionType: 'multiple',\n      answers: [\n        'abaabaaabaa',\n        'aaaabaaaa',\n        'baaaaabaaaab',\n        'baaaaabaa',\n      ],\n      correctAnswer: [1, 2, 4],\n      messageForCorrectAnswer: 'Correct answer.',\n      messageForIncorrectAnswer: 'Incorrect answer.',\n      explanation: [\n        'Any combination of strings in set {ab, aa, baa} will be in L*. ',\n        '\"abaabaaabaa\" can be partitioned as \"ab aa baa ab aa\", ',\n        '\"aaaabaaaa\" as \"aa ab aa aa\", and ',\n        '\"baaaaabaa\" as \"baa aa ab aa\".',\n      ],\n      point: '1',\n    },\n    {\n      question: 'The definition of a language `L` with alphabet `{a}` is given as following `L={a^nk| k>0, and n is a positive integer constant}`.\\nWhat is the minimum number of states needed in DFA to recognize L?',\n      questionType: 'text',\n      answerSelectionType: 'single',\n      answers: [\n        'k + 1',\n        'n + 1',\n        '2^(n + 1)',\n        '2^(k + 1)',\n      ],\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Correct answer.',\n      messageForIncorrectAnswer: 'Incorrect answer.',\n      explanation: [\n        'Note that n is a constant and k is any positive integer. ',\n        'For example, if n is given as 3, then the DFA must be able to accept 3a, 6a, 9a, 12a, etc ',\n        'To build such a DFA, we need 4 states.',\n      ],\n      point: '1',\n    },\n    {\n      question: 'Let `w` be any string of length `n` is `{0,1}*`. Let `L` be the set of all substrings of `w`. What is the minimum number of states in a non-deterministic finite automaton that accepts `L`?',\n      questionType: 'text',\n      answerSelectionType: 'single',\n      answers: [\n        'n - 1',\n        'n',\n        'n + 1',\n        '2n -1',\n      ],\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'Correct answer.',\n      messageForIncorrectAnswer: 'Incorrect answer.',\n      explanation: [\n        'We need minimum n + 1 states to build NFA that accepts all substrings of a binary string.',\n      ],\n      point: '1',\n    },\n    {\n      question: 'Which one of the following languages over the alphabet `{0,1}` is described by the regular expression `(0+1)*0(0+1)*0(0+1)*`?',\n      questionType: 'text',\n      answerSelectionType: 'single',\n      answers: [\n        'Set of all strings containing the substring 00',\n        \"Set of all strings containing at most two 0's\",\n        \"Set of all strings containing at least two 0's\",\n        'Set of all strings that begin and end with either 0 or 1',\n      ],\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'Correct answer.',\n      messageForIncorrectAnswer: 'Incorrect answer.',\n      explanation: [\n        \"The regular expression has two 0's surrounded by (0+1)* which means accepted strings must have at least two 0′s.\",\n      ],\n      point: '1',\n    },\n    {\n      question: 'Which one of the following is FALSE?',\n      questionType: 'text',\n      answerSelectionType: 'single',\n      answers: [\n        'There is unique minimal DFA for every regular language',\n        'Every NFA can be converted to an equivalent PDA',\n        'Complement of every context-free language is recursive',\n        'Every nondeterministic PDA can be converted to an equivalent deterministic PDA',\n      ],\n      correctAnswer: '4',\n      messageForCorrectAnswer: 'Correct answer.',\n      messageForIncorrectAnswer: 'Incorrect answer.',\n      explanation: [\n        'Power of Deterministic PDA is not same as the power of Non-deterministic PDA. ',\n        'Deterministic PDA cannot handle languages or grammars with ambiguity, but NDPDA ',\n        'can handle languages with ambiguity and any context-free grammar. ',\n        'So every non-deterministic PDA can not be converted to an equivalent deterministic PDA.',\n      ],\n      point: '1',\n    },\n  ],\n};\n\n\nexport const Practice: React.FC = () =>\n\n// TODO: improve this quiz with images, runtime generation of math formulas\n// allow answers to be tested in real time, show the state machine, etc\n\n  (\n    <Layout>\n      <Quiz quiz={questions} shuffle={false} showInstantFeedback />\n    </Layout>\n  );\n","import { Practice } from './practice';\n\nexport default Practice;\n","import React from 'react';\nimport { Input } from 'antd';\nimport noam from 'noam';\n\nimport './test-words.css';\n\nfunction isValidAutomaton(automaton: any): boolean {\n  return automaton && automaton.transitions.length > 0;\n}\n\nfunction renderResultsHTML(automaton: any, words: Array<string>, expected: boolean): string {\n  const results: Array<string> = [];\n\n  if (!isValidAutomaton(automaton)) {\n    return '';\n  }\n\n  for (const str of words) {\n    let strState: string = expected ? 'invalid' : 'valid';\n\n    try {\n      if (noam.fsm.isStringInLanguage(automaton, str)) {\n        strState = expected ? 'valid' : 'invalid';\n      }\n    } catch {\n      //\n    }\n\n    results.push(`<span class=\"${strState}\">${str}</span>`);\n  }\n\n  return results.join('');\n}\n\nexport const TestWords: React.FC<{\n    automaton: any;\n    words: Array<string>;\n    testAccept: boolean;\n    onChange?: (words: Array<string>) => void;\n}> = ({\n  automaton, words, testAccept, onChange,\n}) => {\n  const testType: string = (testAccept ? 'Accept' : 'Reject');\n\n  return (\n    <div className={`test-words ${testType.toLowerCase()}`}>\n      <h2>{testType}</h2>\n\n      <div className=\"container\">\n        <div className=\"backdrop\">\n          <div\n            className=\"highlights\"\n            dangerouslySetInnerHTML={{\n              __html:\n                            renderResultsHTML(automaton, words, testAccept),\n            }}\n          />\n        </div>\n        <Input.TextArea\n          rows={8}\n          value={words.join('\\n')}\n          onChange={(e) => {\n            if (onChange) {\n              onChange(e.target.value.split('\\n'));\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import { TestWords } from './test-words';\n\nexport default TestWords;\n","import React, { useMemo, useRef } from 'react';\nimport noam from 'noam';\nimport Viz from 'viz.js';\nimport { Module, render } from 'viz.js/full.render.js';\n\nimport './automaton-viewer.css';\n\nfunction isValidAutomaton(automaton: any): boolean {\n  return automaton && automaton.transitions.length > 0;\n}\n\nfunction renderAutomaton(automaton: any, automatonParent: React.RefObject<HTMLDivElement>): void {\n  if (!isValidAutomaton(automaton)) {\n    return;\n  }\n\n  (new Viz({ Module, render }))\n    .renderSVGElement(noam.fsm.printDotFormat(automaton))\n    .then((svgElement) => {\n      if (!automatonParent.current) {\n        return;\n      }\n\n      while (automatonParent.current.firstChild) {\n        automatonParent.current.removeChild(automatonParent.current.firstChild);\n      }\n\n      if (isValidAutomaton(automaton)) {\n        automatonParent.current.appendChild(svgElement);\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n\nexport const AutomatonViewer: React.FC<{ automaton: any }> = ({ automaton }) => {\n  const automatonParent = useRef<HTMLDivElement>(null);\n\n  // Rendering the automaton is done directly and bypass React reconciliation\n  // Avoid rendering if the automaton has not changed\n  useMemo(() => renderAutomaton(automaton, automatonParent), [automaton]);\n\n  return (\n    <div className=\"automaton-viewer-container\" ref={automatonParent} />\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport {\n  Dropdown,\n  Icon,\n  Input,\n  Layout,\n  Menu,\n  Tooltip,\n  Button,\n} from 'antd';\nimport { ClickParam } from 'antd/lib/menu';\nimport SubMenu from 'antd/lib/menu/SubMenu';\n\nimport noam from 'noam';\n\nimport TestWords from '../../components/test-words';\nimport AutomatonViewer from '../../components/automaton-viewer';\nimport ExpressionHelp from '../../components/regular-expression';\nimport { Examples } from './examples';\n\nimport './regular-language.css';\n\nfunction generateAutomaton(expression: string): any {\n  try {\n    const automaton = noam.fsm.convertStatesToNumbers(\n      noam.fsm.minimize(\n        noam.fsm.convertNfaToDfa(\n          noam.fsm.convertEnfaToNfa(\n            noam.re.string.toAutomaton(expression),\n          ),\n        ),\n      ),\n    );\n\n    return [automaton, null];\n  } catch (error) {\n    if (error.name === 'RegexError') {\n      return [null, error];\n    }\n  }\n}\n\nenum ExpressionMenuOp {\n  RANDOM = 'random',\n  SIMPLIFY = 'simplify',\n}\n\nexport const RegularLanguage: React.FC = () => {\n  const [expression, setExpression] = useState('');\n  const [acceptWords, setAcceptWords] = useState<Array<string>>([]);\n  const [rejectWords, setRejectWords] = useState<Array<string>>([]);\n\n  // Avoid generating a new automaton between renders for the same expression\n  const [automaton, error] = useMemo(() => generateAutomaton(expression), [expression]);\n\n  const handleExpressionMenuClick = (click: ClickParam) => {\n    switch (click.key) {\n      case ExpressionMenuOp.RANDOM: {\n        setExpression(\n          noam.re.string.simplify(\n            noam.re.string.random(5, 'ab', {}),\n          ),\n        );\n        break;\n      }\n      case ExpressionMenuOp.SIMPLIFY: {\n        /** TODO:\n                 * write the simplify steps to the log\n                 * allow debugging the simplification with step forward and explanation\n                 */\n        setExpression(noam.re.string.simplify(expression));\n        break;\n      }\n    }\n\n    if (click.key.startsWith('example')) {\n      const index = Number(click.key.split('-')[1]);\n      setExpression(Examples[index].expression);\n      setAcceptWords(Examples[index].acceptWords);\n      setRejectWords(Examples[index].rejectWords);\n    }\n  };\n\n  return (\n    <Layout>\n      <h1>Expression</h1>\n      <div className=\"toolbar\">\n        <Dropdown\n          placement=\"bottomLeft\"\n          trigger={['click']}\n          overlay={(\n            <Menu onClick={handleExpressionMenuClick}>\n              <Menu.Item key={ExpressionMenuOp.RANDOM}>Generate random expression</Menu.Item>\n              <Menu.Item key={ExpressionMenuOp.SIMPLIFY}>Simplify expression</Menu.Item>\n              <SubMenu title=\"Examples\">\n                {\n                  Examples.map((v, i) => <Menu.Item key={`example-${i}`}>{v.title}</Menu.Item>)\n                }\n              </SubMenu>\n            </Menu>\n          )}\n        >\n          <Button icon=\"menu\" size=\"large\" />\n        </Dropdown>\n\n        <Input\n          size=\"large\"\n          placeholder=\"Write your regular expression\"\n          value={expression}\n          prefix={ExpressionHelp}\n          suffix={(\n            <Tooltip placement=\"topRight\" title={error ? error.message : ''}>\n              <Icon type=\"close\" style={{ color: 'red', display: (!error ? 'none' : 'inherit') }} />\n            </Tooltip>\n          )}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setExpression(event.target.value)}\n        />\n      </div>\n      <h1>Words</h1>\n      <TestWords automaton={automaton} words={acceptWords} testAccept onChange={(words) => setAcceptWords(words)} />\n      <TestWords automaton={automaton} words={rejectWords} testAccept={false} onChange={(words) => setRejectWords(words)} />\n      <h1>Automaton</h1>\n      <AutomatonViewer automaton={automaton} />\n    </Layout>\n  );\n};\n","import { AutomatonViewer } from './automaton-viewer';\n\nexport default AutomatonViewer;\n","import React from 'react';\nimport { Icon, Popover } from 'antd';\n\nconst Title = (\n  <span>What is a regular expression?</span>\n);\n\nconst Content = (\n  <div>\n    <p>\nA regular expression (over an alphabet Σ) is a string consisting of symbols from Σ, plus symbols from the list\n      <em>+</em>\n,\n      <em>*</em>\n,\n      <em>(</em>\n,\n      <em>)</em>\n,\n      <em>$</em>\n.\n    </p>\n    <ul>\n      <li>\n        <strong>+</strong>\n        {' '}\n(alteration operator, ∪)\n      </li>\n      <li>\n        <strong>∗</strong>\n        {' '}\n(Kleene star); 0 or more symbols\n      </li>\n      <li>\n        <strong>(</strong>\n; start grouping\n      </li>\n      <li>\n        <strong>)</strong>\n; end grouping\n      </li>\n      <li>\n        <strong>$</strong>\n        {' '}\n(epsilon, ε); empty string\n      </li>\n      <li>\n        <strong>\\</strong>\n        {' '}\n(backslash); used for escaping the special meaning of all the listed characters, including backslash itself\n      </li>\n    </ul>\n\n    <p>\nExample:\n      <code>a(a+b)*</code>\n    </p>\n    <p>\n= all words starting with a, followed by any word over\n      {'{a, b}'}\n    </p>\n    <p>\n= all words over the alphabet\n      {'{a, b}'}\n      {' '}\nstarting with a\n    </p>\n  </div>\n);\n\nexport const ExpressionHelp = (\n  <Popover\n    placement=\"rightTop\"\n    title={Title}\n    content={Content}\n  >\n    <Icon type=\"question-circle\" style={{ color: 'rgba(0,0,0,.45)' }} />\n  </Popover>\n);\n","import { ExpressionHelp } from './regular-expression';\n\nexport default ExpressionHelp;\n","type ExpressionExample = {\n    title: string;\n    expression: string;\n    acceptWords: Array<string>;\n    rejectWords: Array<string>;\n}\n\nexport const Examples: Array<ExpressionExample> = [\n  {\n    title: 'one or more \"ab\"',\n    expression: 'ab(ab)*',\n    acceptWords: [\n      'ab',\n      'abab',\n      'ababab',\n    ],\n    rejectWords: [\n      'a',\n      'b',\n      'aba',\n      'ba',\n      'bb',\n      'ababb',\n    ],\n  },\n  {\n    title: 'strictly alternating a\\'s and b\\'s',\n    expression: '(ab)*(a+$)+(ba)*(b+$)',\n    acceptWords: [\n      'a',\n      'b',\n      'ab',\n      'ba',\n      'aba',\n      'bab',\n      'abab',\n      'baba',\n    ],\n    rejectWords: [\n      'bb',\n      'aa',\n      'abba',\n    ],\n  },\n  {\n    title: 'begin with \"aba\" and end with \"bb\"',\n    expression: 'aba(a+b)*bb',\n    acceptWords: [\n      'ababb',\n      'ababb',\n      'ababbb',\n      'ababbababb',\n    ],\n    rejectWords: [\n      'aba',\n      'abab',\n      'abb',\n    ],\n  },\n  {\n    title: 'groups of 2 or more a\\'s',\n    expression: '(b+(aaa*))*',\n    acceptWords: [\n      'b',\n      'bbbb',\n      'aa',\n      'aaa',\n      'aabaaabbaa',\n      'bbaabaaabaabaaa',\n    ],\n    rejectWords: [\n      'a',\n      'aba',\n      'abba',\n      'aabaaaaba',\n    ],\n  },\n  {\n    title: 'start with \"a\" and not contain \"cb\"',\n    expression: 'a(a+b+cc*a)*(cc*+$)',\n    acceptWords: [\n      'a',\n      'ab',\n      'abc',\n      'ac',\n      'acc',\n      'accab',\n    ],\n    rejectWords: [\n      'b',\n      'c',\n      'acb',\n      'abbabcba',\n    ],\n  },\n  {\n    title: 'even number of a\\'s and odd number of b\\'s',\n    expression: '(aa+bb+abba+baab+abab+baba)*(aba+b)(aa+bb+abba+baab+abab+baba)*',\n    acceptWords: [\n      'b',\n      'aab',\n      'baa',\n      'aba',\n      'aaaba',\n      'aababab',\n    ],\n    rejectWords: [\n      'aa',\n      'abba',\n      'abbbabab',\n    ],\n  },\n];\n","import { RegularLanguage } from './regular-language';\n\nexport default RegularLanguage;\n","import React, { useEffect } from 'react';\nimport {\n  HashRouter,\n  Link,\n  Route,\n  RouteComponentProps,\n  withRouter,\n} from 'react-router-dom';\nimport ReactGA, { FieldsObject } from 'react-ga';\nimport { Layout, Menu } from 'antd';\n\nimport Automaton from '../../routes/automaton';\nimport Practice from '../../routes/practice';\nimport RegularLanguage from '../../routes/regular-language';\n\nimport logo from '../../assets/logo.svg';\n\nimport './app.css';\n\nconst { Header, Sider, Content } = Layout;\n\nReactGA.initialize('UA-50201175-2', { testMode: process.env.NODE_ENV !== 'production' });\n\nconst withTracker = <P extends RouteComponentProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: FieldsObject = {},\n) => {\n  const trackPage = (page: string) => {\n    ReactGA.set({ page, ...options });\n    ReactGA.pageview(page);\n  };\n\n  return (props: P) => {\n    useEffect(() => {\n      trackPage(props.location.pathname);\n    }, [props.location.pathname]);\n\n    return <WrappedComponent {...props} />;\n  };\n};\n\nfunction getKeyFromLocation(pathname: string): string {\n  if (pathname === '/') {\n    return 'automaton';\n  }\n\n  return pathname.substr(1);\n}\n\nconst SiderWithRouter = withRouter(({ location }) => (\n  <Sider width=\"300px\">\n    <Menu theme=\"dark\" selectedKeys={[getKeyFromLocation(location.pathname)]}>\n      <Menu.Item key=\"automaton\">\n        <Link to=\"/automaton\">Automaton</Link>\n      </Menu.Item>\n      <Menu.Item key=\"regular-language\">\n        <Link to=\"/regular-language\">Regular language</Link>\n      </Menu.Item>\n      <Menu.Item key=\"practice\">\n        <Link to=\"/practice\">Practice questions</Link>\n      </Menu.Item>\n    </Menu>\n  </Sider>\n));\n\nexport const App: React.FC = () => (\n  <HashRouter>\n    <Layout>\n      <Header>\n        <div className=\"logo\">\n          <img src={logo} className=\"icon\" alt=\"logo\" />\n          <a href=\".\">Fundamentals of Computing</a>\n        </div>\n        <div className=\"links\">\n          <a href=\"https://github.com/silvafj/focsimulation\">GitHub</a>\n          <a href=\"http://www.dcs.bbk.ac.uk/~michael/foc/foc.html\">Course</a>\n        </div>\n      </Header>\n      <SiderWithRouter />\n      <Content>\n        <Route exact path={['/', '/automaton']} component={withTracker(Automaton)} />\n        <Route exact path={['/regular-language']} component={withTracker(RegularLanguage)} />\n        <Route exact path={['/practice']} component={withTracker(Practice)} />\n      </Content>\n    </Layout>\n  </HashRouter>\n);\n","import { App } from './app';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}